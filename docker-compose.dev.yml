version: "3.9"

services:
  db:
    image: postgres:15-alpine
    container_name: bookstore_db_dev
    environment:
      POSTGRES_DB: bookstore
      POSTGRES_USER: bookstore
      POSTGRES_PASSWORD: bookstore
    volumes:
      - db_data_dev:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bookstore -d bookstore"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookstore_dev_network

  redis:
    image: redis:7-alpine
    container_name: bookstore_redis_dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - bookstore_dev_network

  web:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: bookstore_web_dev
    command: python manage.py runserver 0.0.0.0:8000 --settings=backend.settings.dev
    environment:
      - DJANGO_SETTINGS_MODULE=backend.settings.dev
      - POSTGRES_DB=bookstore
      - POSTGRES_USER=bookstore
      - POSTGRES_PASSWORD=bookstore
      - POSTGRES_HOST=db
      - POSTGRES_PORT=5432
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SECRET_KEY=dev-secret-key
      - DJANGO_DEBUG=1
      - DJANGO_ALLOWED_HOSTS=localhost,127.0.0.1,0.0.0.0
    volumes:
      - .:/app
      - static_volume_dev:/app/staticfiles
      - media_volume_dev:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - bookstore_dev_network

volumes:
  db_data_dev:
  static_volume_dev:
  media_volume_dev:

networks:
  bookstore_dev_network:
    driver: bridge


















